$date
	Tue Oct 18 22:28:04 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module adder_tb $end
$var wire 8 ! d [7:0] $end
$var reg 8 " a [7:0] $end
$var reg 8 # b [7:0] $end
$var reg 8 $ c [7:0] $end
$var reg 1 % clk $end
$var integer 32 & i [31:0] $end
$scope module a1 $end
$var wire 8 ' a [7:0] $end
$var wire 8 ( b [7:0] $end
$var wire 8 ) c [7:0] $end
$var wire 1 % clk $end
$var reg 8 * d [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11000 *
b1001 )
b1001 (
b110 '
b0 &
1%
b1001 $
b1001 #
b110 "
b11000 !
$end
#10
b101 $
b101 )
b101 #
b101 (
b1001 "
b1001 '
b1 &
#20
b1001 $
b1001 )
b1110 #
b1110 (
b111 "
b111 '
b10 &
#30
b101 $
b101 )
b110 #
b110 (
b11 &
#40
b111 $
b111 )
b0 #
b0 (
b100 &
#50
b100 $
b100 )
b1001 #
b1001 (
b1000 "
b1000 '
b101 &
#60
b110 $
b110 )
b111 #
b111 (
b11 "
b11 '
b110 &
#70
b10 $
b10 )
b1110 #
b1110 (
b111 "
b111 '
b111 &
#80
b1000 &
